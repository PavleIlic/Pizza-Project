"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = privateMap.get(receiver); if (!descriptor) { throw new TypeError("attempted to set private field on non-instance"); } if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } return value; }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = privateMap.get(receiver); if (!descriptor) { throw new TypeError("attempted to get private field on non-instance"); } if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

var _parrentEl = new WeakMap();

class SearchView {
  constructor() {
    _parrentEl.set(this, {
      writable: true,
      value: document.querySelector('.search')
    });
  }

  getQuery() {
    return _classPrivateFieldGet(this, _parrentEl).querySelector('.search__field').value;
  }

  clearSearchField() {
    _classPrivateFieldSet(this, _parrentEl, '');
  }

  addHeandlerSearch(handler) {
    _classPrivateFieldGet(this, _parrentEl).addEventListener('submit', function (e) {
      e.preventDefault();
      handler();
    });
  }

}

var _default = new SearchView();

exports.default = _default;